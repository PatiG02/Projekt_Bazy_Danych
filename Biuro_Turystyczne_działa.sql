-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-05-20 12:23:35 CEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adres (
    id_adres        INTEGER NOT NULL AUTO_INCREMENT,
    ulica           VARCHAR(600) NOT NULL,
    nr_domu         VARCHAR(10) NOT NULL,
    nr_mieszkania   INTEGER,
    kod_pocztowy    VARCHAR(11) NOT NULL,
    id_miejscowości INTEGER NOT NULL,
    PRIMARY KEY (id_adres)
);


CREATE TABLE kolonia (
    id_kolonii        INTEGER NOT NULL AUTO_INCREMENT,
    ilość_miejsc      INTEGER NOT NULL,
    data_rozpoczęcia  DATE NOT NULL,
    data_zakończenia  DATE NOT NULL,
    cena              DECIMAL(10, 2) NOT NULL,
    id_miejscowości   INTEGER NOT NULL,
    id_zakwaterowania INTEGER NOT NULL,
    id_adres          INTEGER NOT NULL,
    PRIMARY KEY ( id_kolonii )
);

CREATE TABLE kraj (
    id_kraju INTEGER NOT NULL AUTO_INCREMENT,
    nazwa    VARCHAR(500) NOT NULL,
    PRIMARY KEY ( id_kraju )
);

CREATE TABLE miejscowość (
    id_miejscowości INTEGER NOT NULL AUTO_INCREMENT,
    nazwa           VARCHAR(500) NOT NULL,
    id_kraju        INTEGER NOT NULL,
    PRIMARY KEY ( id_miejscowości )
);

CREATE TABLE osoba (
    id_osoba    INTEGER NOT NULL AUTO_INCREMENT,
    imię        VARCHAR(100) NOT NULL,
    nazwisko    VARCHAR(120) NOT NULL,
    nr_telefonu VARCHAR(16) NOT NULL,
    id_adres    INTEGER NOT NULL,
    PRIMARY KEY ( id_osoba )
);


CREATE TABLE pośrednik (
    id_pośrednika INTEGER NOT NULL AUTO_INCREMENT,
    nazwa         VARCHAR(500) NOT NULL,
    email      VARCHAR(500) NOT NULL,
    nr_telefonu   VARCHAR(16) NOT NULL,
    nip           INTEGER NOT NULL,
    id_adres      INTEGER NOT NULL,
    PRIMARY KEY ( id_pośrednika )
);


CREATE TABLE prowizja (
    id_pośrednika     INTEGER NOT NULL,
    id_prowizji       INTEGER NOT NULL AUTO_INCREMENT,
    wysokość_prowizji INTEGER NOT NULL,
    id_kolonii        INTEGER NOT NULL,
    PRIMARY KEY ( id_prowizji )
);


CREATE TABLE transport (
    id_transportu INTEGER NOT NULL AUTO_INCREMENT,
    rodzaj        VARCHAR(500) NOT NULL,
    PRIMARY KEY ( id_transportu )
);


CREATE TABLE transport_dla_kolonii (
    kolonia_id_kolonii      INTEGER NOT NULL,
    transport_id_transportu INTEGER NOT NULL,
    PRIMARY KEY ( kolonia_id_kolonii, transport_id_transportu )
);

CREATE TABLE uczestnik (
    id_uczestnika  INTEGER NOT NULL AUTO_INCREMENT,
    imię           VARCHAR(100) NOT NULL,
    nazwisko       VARCHAR(120) NOT NULL,
    data_urodzenia DATE NOT NULL,
    choroby        VARCHAR(450),
    alergie        VARCHAR(450),
    leki           VARCHAR(600),
    id_adres       INTEGER NOT NULL,
    PRIMARY KEY ( id_uczestnika )
);


CREATE TABLE uczestnik_osoba (
    uczestnik_id_uczestnika INTEGER NOT NULL,
    osoba_id_osoba          INTEGER NOT NULL,
    PRIMARY KEY ( uczestnik_id_uczestnika, osoba_id_osoba )
);


CREATE TABLE uczestnik_w_umowie (
    umowa_id_umowy          INTEGER NOT NULL,
    uczestnik_id_uczestnika INTEGER NOT NULL,
    PRIMARY KEY ( umowa_id_umowy, uczestnik_id_uczestnika )
);

CREATE TABLE umowa (
    id_pośrednika INTEGER NOT NULL,
    id_umowy      INTEGER NOT NULL AUTO_INCREMENT,
    nazwa         VARCHAR(350) NOT NULL,
    id_kolonii    INTEGER NOT NULL,
    id_osoba      INTEGER NOT NULL,
    id_transportu INTEGER NOT NULL,
    id_wyżywienia INTEGER NOT NULL,
    PRIMARY KEY ( id_umowy )     
);


CREATE TABLE wyżywienie (
    id_wyżywienia INTEGER NOT NULL AUTO_INCREMENT,
    rodzaj        VARCHAR(400) NOT NULL,
    PRIMARY KEY ( id_wyżywienia )
);


CREATE TABLE wyżywienie_przy_zakwaterowaniu (
    kolonia_id_kolonii       INTEGER NOT NULL,
    wyżywienie_id_wyżywienia INTEGER NOT NULL,
    PRIMARY KEY ( kolonia_id_kolonii, wyżywienie_id_wyżywienia )
);

CREATE TABLE zakwaterowanie (
    id_zakwaterowania INTEGER NOT NULL AUTO_INCREMENT,
    nazwa             VARCHAR(500) NOT NULL,
    email          VARCHAR(250) NOT NULL,
    nr_telefonu       VARCHAR(16) NOT NULL,
    nip               INTEGER NOT NULL,
    id_adres          INTEGER NOT NULL,
    PRIMARY KEY ( id_zakwaterowania )
);

ALTER TABLE adres
    ADD CONSTRAINT adres_miejscowość_fk FOREIGN KEY ( id_miejscowości )
        REFERENCES miejscowość ( id_miejscowości );
        
ALTER TABLE kolonia
    ADD CONSTRAINT kolonia_miejscowość_fk FOREIGN KEY ( id_miejscowości )
        REFERENCES miejscowość ( id_miejscowości );        

ALTER TABLE kolonia
    ADD CONSTRAINT kolonia_adres_fk FOREIGN KEY ( id_adres )
        REFERENCES adres ( id_adres );

ALTER TABLE kolonia
    ADD CONSTRAINT kolonia_zakwaterowanie_fk FOREIGN KEY ( id_zakwaterowania )
        REFERENCES zakwaterowanie ( id_zakwaterowania );

ALTER TABLE miejscowość
    ADD CONSTRAINT miejscowość_kraj_fk FOREIGN KEY ( id_kraju )
        REFERENCES kraj ( id_kraju );

ALTER TABLE osoba
    ADD CONSTRAINT osoba_adres_fk FOREIGN KEY ( id_adres )
        REFERENCES adres ( id_adres );

ALTER TABLE pośrednik
    ADD CONSTRAINT pośrednik_adres_fk FOREIGN KEY ( id_adres )
        REFERENCES adres ( id_adres );

ALTER TABLE prowizja
    ADD CONSTRAINT prowizja_kolonia_fk FOREIGN KEY ( id_kolonii )
        REFERENCES kolonia ( id_kolonii );

ALTER TABLE prowizja
    ADD CONSTRAINT prowizja_pośrednik_fk FOREIGN KEY ( id_pośrednika )
        REFERENCES pośrednik ( id_pośrednika );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE transport_dla_kolonii
    ADD CONSTRAINT transport_dla_kolonii_kolonia_fk FOREIGN KEY ( kolonia_id_kolonii )
        REFERENCES kolonia ( id_kolonii );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE transport_dla_kolonii
    ADD CONSTRAINT transport_dla_kolonii_transport_fk FOREIGN KEY ( transport_id_transportu )
        REFERENCES transport ( id_transportu );

ALTER TABLE uczestnik
    ADD CONSTRAINT uczestnik_adres_fk FOREIGN KEY ( id_adres )
        REFERENCES adres ( id_adres );

ALTER TABLE uczestnik_osoba
    ADD CONSTRAINT uczestnik_osoba_osoba_fk FOREIGN KEY ( osoba_id_osoba )
        REFERENCES osoba ( id_osoba );

ALTER TABLE uczestnik_osoba
    ADD CONSTRAINT uczestnik_osoba_uczestnik_fk FOREIGN KEY ( uczestnik_id_uczestnika )
        REFERENCES uczestnik ( id_uczestnika );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE uczestnik_w_umowie
    ADD CONSTRAINT uczestnik_w_umowie_uczestnik_fk FOREIGN KEY ( uczestnik_id_uczestnika )
        REFERENCES uczestnik ( id_uczestnika );

ALTER TABLE uczestnik_w_umowie
    ADD CONSTRAINT uczestnik_w_umowie_umowa_fk FOREIGN KEY ( umowa_id_umowy )
        REFERENCES umowa ( id_umowy );

ALTER TABLE umowa
    ADD CONSTRAINT umowa_kolonia_fk FOREIGN KEY ( id_kolonii )
        REFERENCES kolonia ( id_kolonii );

ALTER TABLE umowa
    ADD CONSTRAINT umowa_osoba_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoba ( id_osoba );

ALTER TABLE umowa
    ADD CONSTRAINT umowa_pośrednik_fk FOREIGN KEY ( id_pośrednika )
        REFERENCES pośrednik ( id_pośrednika );

ALTER TABLE umowa
    ADD CONSTRAINT umowa_transport_fk FOREIGN KEY ( id_transportu )
        REFERENCES transport ( id_transportu );

ALTER TABLE umowa
    ADD CONSTRAINT umowa_wyżywienie_fk FOREIGN KEY ( id_wyżywienia )
        REFERENCES wyżywienie ( id_wyżywienia );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE wyżywienie_przy_zakwaterowaniu
    ADD CONSTRAINT wyżywienie_przy_zakwaterowaniu_kolonia_fk FOREIGN KEY ( kolonia_id_kolonii )
        REFERENCES kolonia ( id_kolonii );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE wyżywienie_przy_zakwaterowaniu
    ADD CONSTRAINT wyżywienie_przy_zakwaterowaniu_wyżywienie_fk FOREIGN KEY ( wyżywienie_id_wyżywienia )
        REFERENCES wyżywienie ( id_wyżywienia );

ALTER TABLE zakwaterowanie
    ADD CONSTRAINT zakwaterowanie_adres_fk FOREIGN KEY ( id_adres )
        REFERENCES adres ( id_adres );adres